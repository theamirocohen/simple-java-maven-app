name: Maven Build

on:
  push:
    branches: [ master ]  # Change to 'main' if needed

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for version bump commits/tags

    steps:
      # Checkout code with full history (for tags)
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # Detect version bump type from commit message
      - name: Determine version bump
        id: version-bump
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MSG" == *"[major]"* ]]; then
            echo "BUMP_TYPE=major" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MSG" == *"[minor]"* ]]; then
            echo "BUMP_TYPE=minor" >> $GITHUB_OUTPUT
          else
            echo "BUMP_TYPE=patch" >> $GITHUB_OUTPUT
          fi

      # Get current version from Git tags (or default to 0.0.0)
      - name: Get current version
        id: current-version
        run: |
          git fetch --tags
          CURRENT_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "CURRENT_VERSION=${CURRENT_VERSION#v}" >> $GITHUB_ENV  # Remove 'v' prefix

      # Calculate new version
      - name: Calculate new version
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          case "${{ steps.version-bump.outputs.BUMP_TYPE }}" in
            major)
              NEW_VERSION="$((MAJOR + 1)).0.0"
              ;;
            minor)
              NEW_VERSION="$MAJOR.$((MINOR + 1)).0"
              ;;
            *)
              NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"  # Default to patch
              ;;
          esac
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Update Maven version in pom.xml
      - name: Set Maven version
        run: mvn versions:set -DnewVersion=$NEW_VERSION

      # Commit version bump and tag (optional)
      - name: Commit and tag version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add pom.xml
          git commit -m "Bump version to $NEW_VERSION"
          git tag -a "v$NEW_VERSION" -m "Release $NEW_VERSION"
          git push origin master --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build only (no publish)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package  # Only builds (creates target/*.jar)
